services:
    app:
#        build: OLD VERSION
#            context: .
#            dockerfile: Dockerfile
        image: php:8.3-fpm
        container_name: app
        volumes:
            - .:/var/www/html
        ports:
            - "9000:9000"
        networks:
            - laravel
        command: /bin/bash -c "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && apt-get update && apt-get install -y git curl unzip libjpeg-dev libpng-dev libwebp-dev libzip-dev libfreetype6-dev libonig-dev zip nodejs npm && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp && docker-php-ext-install pdo_mysql mbstring zip gd && chown -R www-data:www-data /var/www/html/public/build /var/www/html/storage /var/www/html/bootstrap/cache && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache /var/www/html/public/build && php-fpm"
    nginx:
        image: nginx:1.27.2 #-alpine3.20
        container_name: laravel-nginx
        restart: always
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www/html
        ports:
            - "443:443" # Port HTTPS
            - "8080:80" # Port Http
        depends_on:
            - app
        networks:
            - laravel
    mongo:
        image: mongo:8.0
        container_name: laravel_mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongo_root
            MONGO_INITDB_ROOT_PASSWORD: mongo_password
        ports:
            - "27017:27017"
        volumes:
            - mongodata:/data/db
        networks:
            - laravel
volumes:
    mongodata:

networks:
    laravel:
        driver: bridge
